{"version":3,"sources":["utils/crypto.js","components/Error.jsx","components/SignIn.jsx","components/SignUp.jsx","utils/time.js","components/PostsListView.jsx","components/PostsList.jsx","components/Navbar.jsx","components/About.jsx","components/CategoryDropDown.jsx","components/CreatePost.jsx","components/Markdown/HorizontalLine.jsx","components/Markdown/Image.jsx","components/CommentsListView.jsx","components/CommentsList.jsx","components/ShowPost.jsx","components/Modcontrol.jsx","components/EditCategory.jsx","components/UsernameDropDown.jsx","components/EditModerator.jsx","components/Admincontrol.jsx","App.jsx","index.js"],"names":["SHA265","str","createHash","update","digest","ErrorMessage","msg","Grid","item","xs","style","margin","Typography","align","color","theme","createTheme","SignIn","setUsername","setPoints","setIsloggedin","setToken","setIsmod","setIsadmin","React","error","setError","redirect","setRedirect","PostLoginDetails","email","password","a","fetch","method","headers","body","JSON","stringify","loginResp","json","content","username","bbpoints","token","mod_categories","length","isadmin","handleSubmit","event","preventDefault","data","FormData","currentTarget","get","pass","SHA_256","to","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","variant","onSubmit","noValidate","mt","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","type","Error","Button","mb","container","Link","href","SignUp","PostRegisterDetails","registerResp","spacing","justifyContent","getTime","timestamp","moment","utc","fromNow","PostsListView","posts","isloggedin","showButtons","setPosts","redirectCreatePost","setRedirectCreatePost","deleteHandler","postid","deleteResp","resp","console","log","filter","post","unreportHandler","reportedid","ispost","unreportResp","justify","direction","width","borderRadius","size","onClick","placeholder","onFocus","map","category","postHeading","createdAt","backgroundColor","textDecoration","marginLeft","marginRight","marginBottom","startIcon","palette","primary","dark","main","PostsLists","useState","fetchPosts","postsResults","useEffect","useStyles","makeStyles","title","flexGrow","menuItem","overrides","MuiButton","raisedPrimary","Navbar","ismod","classes","Rightbar","anchorEl","setAnchorEl","className","styles","cursor","Menu","open","Boolean","onClose","MenuItem","AppBar","position","Toolbar","About","CategoryDropDown","setCategory","keyword","setKeyword","categories","setCategories","target","getCategories","categoriesResults","catbody","onKeyDown","key","value","onChange","toUpperCase","categoryid","converter","Showdown","tables","simplifiedAutoLink","strikethrough","tasklists","CreatePost","setBody","setTitle","selectedTab","setSelectedTab","setPostid","postContent","createPostResult","response","onTabChange","generateMarkdownPreview","markdown","Promise","resolve","makeHtml","childProps","writeButton","tabIndex","MyHorizonatalLine","MyImageTag","children","props","CommentsListView","comments","setComments","commentReport","commentid","reportResp","report","comment","components","hr","img","CommentsList","fetchComments","commentsResults","postComment","ppostid","commResults","minHeight","ShowPost","useParams","setPost","fetchPost","postResults","postReport","Modcontrol","reported","setReported","fetchReported","reportedResponse","EditCategory","AddCategoryHandler","addcatresp","RemoveCategoryHandler","removecatResp","UsernameDropDown","users","setUsers","getUsers","usersResults","userResp","userid","EditModerator","cat","setCat","AddModeratorHandler","addmodresp","RemoveModeratorHandler","removemodresp","Admincontrol","App","points","path","exact","element","PostsList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96077448.chunk.js","sourcesContent":["import { createHash } from 'crypto'\n\nconst SHA265 = (str) => {\n    return createHash('sha256').update(str).digest('hex')\n}\n\nexport default SHA265\n","import React from 'react'\nimport { Grid } from '@mui/material'\nimport Typography from '@mui/material/Typography';\n\nconst ErrorMessage = ({ msg }) => {\n    return (\n        <Grid item xs={12} style={{ margin: 5 }}>\n            <Typography align='center' color=\"red\">\n                {msg}\n            </Typography>\n        </Grid>\n    )\n}\n\nexport default ErrorMessage","import * as React from 'react';\nimport { Button, CssBaseline, TextField, Link, Grid, Box } from '@mui/material'\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport SHA_256 from '../utils/crypto'\nimport { Navigate } from 'react-router-dom'\nimport ErrorMessage from './Error'\n\nconst theme = createTheme();\n\nexport default function SignIn({setUsername, setPoints, setIsloggedin, setToken, setIsmod, setIsadmin}) {\n  // error state\n  const [error, setError] = React.useState(null)\n  const [redirect, setRedirect] = React.useState(false)\n\n  const PostLoginDetails = async (email, password) => {\n    const loginResp = await fetch(`https://forum-backend.azurewebsites.net/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ email, password })\n    })\n\n    const content = await loginResp.json();\n    if (content.error != null) setError(content.error)\n    else { \n      setRedirect(true)\n      setUsername(content.username)\n      setPoints(content.bbpoints)\n      setIsloggedin(true) // setting it as logged in\n      setToken(content.token)\n      // if the mod_categories has no categories then the user is not a moderator\n      if(content.mod_categories.length != 0) setIsmod(true)\n      setIsadmin(content.isadmin)\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // check if email is valid and email and password are not empty\n    // convert the password to somekind of hash to store in the DB\n    const email = data.get('email'), pass = data.get('password')\n    if (email == '' || pass == '') setError(\"Fill in all details!\")\n    else await PostLoginDetails(email, SHA_256(pass));\n  };\n\n  if (redirect) return <Navigate to='/' />\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            {(error != null) ? <ErrorMessage msg={error} /> : <div></div>}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link href=\"/register\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}","import * as React from 'react';\nimport { Button, CssBaseline, TextField, Link, Grid, Box } from '@mui/material'\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport SHA_256 from '../utils/crypto'\nimport { Navigate } from 'react-router-dom'\nimport ErrorMessage from './Error'\n\nconst theme = createTheme();\n\nexport default function SignUp() {\n  // the error state \n  const [error, setError] = React.useState(null)\n  const [redirect, setRedirect] = React.useState(false)\n\n  const PostRegisterDetails = async (username, email, password) => {\n    const registerResp = await fetch(`https://forum-backend.azurewebsites.net/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ username, email, password })\n    })\n\n    const content = await registerResp.json();\n    if (content.error != null) setError(content.error)\n    else { \n      setRedirect(true) \n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    const username = data.get('username'), email = data.get('email'), pass = data.get('password');\n    if (username == '' || email == '' || pass == '') setError(\"Fill in all details!\")\n    else await PostRegisterDetails(username, email, SHA_256(pass));\n  };\n\n  if (redirect) return (<Navigate to='/login' />);\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete=\"given-name\"\n                  name=\"username\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                />\n              </Grid>\n              {(error != null) ? <ErrorMessage msg={error} /> : <div></div>}\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex\">\n              <Grid item>\n                <Link href=\"/login\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}","import moment from 'moment';\n\nconst getTime = (timestamp) => {\n    return moment.utc(timestamp).fromNow()\n}\n\nexport default getTime;","import * as React from 'react';\nimport { Grid, Typography, TextField, Button } from '@mui/material'\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport { Navigate, Link } from 'react-router-dom';\nimport getTime from '../utils/time';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\n\nconst PostsListView = ({ token, posts, setError, isloggedin, showButtons, setPosts }) => {\n    const [redirectCreatePost, setRedirectCreatePost] = React.useState(false)\n\n    const deleteHandler = async (postid) => {\n        const deleteResp = await fetch(`https://forum-backend.azurewebsites.net/removepost`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                postid\n            })\n        })\n\n        const resp = await deleteResp.json();\n        if (resp.error != null) setError(resp.error)\n        else {\n            console.log('Deleted Successfully!')\n        }\n\n        setPosts(posts.filter((post) => {\n            return post.postid != postid;\n        }))\n    }\n\n    const unreportHandler = async (postid) => {\n        const unreportResp = await fetch(`https://forum-backend.azurewebsites.net/unreport`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                reportedid: postid,\n                ispost: true\n            })\n        })\n\n        const resp = await unreportResp.json();\n        if (resp.error != null) setError(resp.error)\n        else {\n            console.log('Unreported Successfully!')\n        }\n\n        setPosts(posts.filter((post) => {\n            return post.postid != postid;\n        }))\n    }\n\n    if (redirectCreatePost) return (<Navigate to='createPost' />)\n    return (\n        <Grid container>\n            <Grid container item\n                align=\"center\"\n                alignItems=\"center\"\n                justify=\"center\"\n                direction=\"column\"\n            >\n                {\n                    (isloggedin) ? (<Grid item container alignItems=\"center\" justify=\"flex-end\" style={{\n                        width: 600,\n                        borderRadius: 10,\n                        margin: 5,\n                    }}>\n                        <div>\n                            <AddCircleIcon style={{ margin: 5 }} size='large' onClick={() => {\n                                if (isloggedin)\n                                    setRedirectCreatePost(true)\n                                else {\n                                    setError(\"Must login to create a post!\")\n                                }\n                            }} />\n                        </div>\n                        <TextField style={{ width: 550, margin: 5 }} placeholder=\"Create Post\" onFocus={() => {\n                            if (isloggedin)\n                                setRedirectCreatePost(true)\n                            else {\n                                setError(\"Must login to create a post!\")\n                            }\n                        }} />\n                    </Grid>) : (<div></div>)\n                }\n                {\n                    posts.map(({ category, username, postHeading, createdAt, postid }) => {\n                        return (\n\n                            <Grid\n                                key={postid}\n                                item container\n                                alignItems=\"center\"\n                                style={{\n                                    width: 600,\n                                    borderRadius: 10,\n                                    margin: 5,\n                                    backgroundColor: '#D3D3D3'\n                                }}>\n                                <Link to={`post/${postid}`} style={{ textDecoration: 'none', color: 'black' }}>\n                                    <Grid container direction=\"column\">\n                                        <Grid item container justify=\"flex-end\">\n                                            <Grid item style={{ marginTop: 5, marginLeft: 20 }}> <b>{`c/${category}`}</b> </Grid>\n                                            <Grid item style={{ marginTop: 5, marginLeft: 5 }}> {`  posted by u/${username}  ${getTime(createdAt)}`} </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item container alignItems=\"center\" align=\"left\">\n                                        <Typography variant=\"h6\" style={{ width: 600, marginLeft: 20, marginRight: 20 }}>{postHeading}</Typography>\n                                    </Grid>\n                                </Link>\n                                {\n                                    (showButtons) ? (\n                                        <Grid container item style={{ marginLeft: 20, marginBottom: 5 }}>\n                                            <Button\n                                                startIcon={<DeleteIcon />}\n                                                style={{ color: '#FF0000' }}\n                                                onClick={async () => {\n                                                    await deleteHandler(postid);\n                                                }}\n                                            >\n                                                Delete\n                                            </Button>\n                                            <Button\n                                                startIcon={<RemoveCircleIcon />}\n                                                style={{ color: '#000000' }}\n                                                onClick={async () => {\n                                                    await unreportHandler(postid)\n                                                }}\n                                            >\n                                                Unreport\n                                            </Button>\n                                        </Grid>\n                                    ) : (<div></div>)\n                                }\n                            </Grid>\n                        )\n                    })\n                }\n            </Grid>\n        </Grid >\n    )\n}\n\nexport default PostsListView;","import React, { useEffect, useState } from 'react';\nimport { CssBaseline } from '@mui/material'\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport PostsListView from './PostsListView'\nimport ErrorMessage from './Error';\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n            dark: '#D3D3D3',\n            main: '#A9A9A9'\n        }\n    }\n});\n\nconst PostsLists = ({ isloggedin }) => {\n    const [error, setError] = useState('')\n    const [posts, setPosts] = useState([])\n\n    const fetchPosts = async () => {\n        const postsResults = await fetch(`https://forum-backend.azurewebsites.net/posts`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n\n        const content = await postsResults.json()\n        if (content.error != null) setError(content.error)\n        else setPosts(content)\n    }\n\n    // keeping the dependency list empty to make sure that the fetchPosts is called everytime this component is rendered\n    useEffect(async () => {\n        await fetchPosts()\n    }, [])\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"md\" color=\"primary\">\n                <CssBaseline />\n                {(error != '') ? <ErrorMessage msg={error} /> : <div></div>}\n                <PostsListView\n                    posts={posts}\n                    setError={setError}\n                    isloggedin={isloggedin}\n                    showButtons={false}\n                />\n            </Container>\n        </ThemeProvider>\n    );\n}\n\nexport default PostsLists","import * as React from 'react';\nimport { Link } from 'react-router-dom'\nimport { makeStyles, createTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Typography, Button, Menu, MenuItem } from '@mui/material';\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        color: 'white',\n        flexGrow: 1,\n        textDecoration: 'none'\n    },\n    menuItem: {\n        color: 'black',\n        textDecoration: 'none'\n    },\n    username: {\n        color: 'white',\n        textDecoration: 'none'\n    }\n}));\n\nconst theme = createTheme({\n    overrides: {\n        MuiButton: {\n            raisedPrimary: {\n                color: 'white',\n            },\n        },\n    }\n});\n\nconst Navbar = ({ username, isloggedin, isadmin, ismod }) => {\n    const classes = useStyles();\n\n    const Rightbar = ({ username }) => {\n        const [anchorEl, setAnchorEl] = React.useState(null);\n\n        const openMenu = (event) => {\n            setAnchorEl(event.currentTarget);\n        }\n\n        const onClick = () => {\n            setAnchorEl(null);\n        }\n\n        if (username != '') {\n            return (\n                <>\n                    <Typography className={classes.username} onClick={openMenu} styles={{ cursor: 'pointer' }}>\n                        {`u/${username}`}\n                    </Typography>\n                    <Menu\n                        anchorEl={anchorEl}\n                        open={Boolean(anchorEl)}\n                        onClose={onClick}\n                    >\n                        {\n                            (isadmin) ? (\n                                <MenuItem >\n                                    <Link to='/admincontrol' className={classes.menuItem}>\n                                        Admin Control\n                                    </Link>\n                                </MenuItem>) : (<div></div>)\n                        }\n                        {\n                            (ismod || isadmin) ? (\n                                <MenuItem>\n                                    <Link to='/modcontrol' className={classes.menuItem}>\n                                        Mod Control\n                                    </Link>\n                                </MenuItem>) : (<div></div>)\n                        }\n                        <MenuItem>\n                            <Link to='/logout' className={classes.menuItem}>\n                                Log Out\n                            </Link>\n                        </MenuItem>\n                    </Menu>\n                </>\n            )\n        } else {\n            return (\n                <div>\n                    <Button component={Link} to=\"/login\" color=\"inherit\">\n                        Sign In\n                    </Button>\n                    <Button component={Link} to=\"/register\" color=\"inherit\">\n                        Sign Up\n                    </Button>\n                </div>\n            )\n        }\n    }\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title}>\n                        Forum\n                    </Typography>\n                    <Rightbar username={username} />\n                </Toolbar>\n            </AppBar>\n        </MuiThemeProvider>\n    );\n};\n\nexport default Navbar;","import * as React from 'react';\nimport { CssBaseline } from '@mui/material'\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme();\n\nconst About = ({username}) => {\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n            </Container>\n        </ThemeProvider>\n    );\n}\n\nexport default About","import * as React from 'react';\nimport { Button, Grid, TextField, Menu, MenuItem } from '@mui/material'\n\nconst CategoryDropDown = ({ setError, category, setCategory }) => {\n    const [keyword, setKeyword] = React.useState('');\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [categories, setCategories] = React.useState([]);\n\n    const openMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    }\n\n    const onClick = (event) => {\n        setCategory(event.target.id);\n        setAnchorEl(null);\n    }\n\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            setCategory(keyword)\n            setAnchorEl(null)\n        }\n    }\n\n    const getCategories = async () => {\n        const categoriesResults = await fetch(`https://forum-backend.azurewebsites.net/getcategories?keyword=${keyword}`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n\n        const catbody = await categoriesResults.json();\n\n        if (catbody.error != null) setError(catbody.error)\n        else setCategories(catbody);\n    }\n\n    React.useEffect(async () => {\n        await getCategories();\n    }, [keyword])\n\n    const handleChange = (event) => {\n        setKeyword(event.target.value.toUpperCase());\n    }\n\n    return (\n        <Grid container spacing={1} justifyContent=\"center\" style={{ width: '50%' }}>\n            <Button\n                type=\"submit\"\n                variant=\"contained\"\n                onClick={openMenu}\n                sx={{ mt: 3, mb: 2, marginLeft: 1 }}\n            >\n                {(category == '') ? \"category\" : `c/${category}`}\n            </Button>\n            <Menu\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={() => {\n                    setCategory(keyword)\n                    setAnchorEl(null)\n                }}\n                onKeyDown={handleKeyDown}\n            >\n                <TextField value={keyword} onChange={handleChange} label=\"Category\" style={{ margin: 1 }}></TextField>\n                {\n                    categories.map(({ name, categoryid }) => {\n                        return (\n                            <MenuItem key={categoryid} id={name} onClick={onClick}> {`c/${name}`} </MenuItem>\n                        )\n                    })\n                }\n            </Menu>\n        </Grid>\n    );\n}\n\nexport default CategoryDropDown;","import * as React from 'react';\nimport { Button, CssBaseline, Grid, TextField, Link } from '@mui/material'\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport ReactMde from \"react-mde\";\nimport * as Showdown from \"showdown\";\nimport ErrorMessage from './Error'\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\nimport \"./style.css\";\nimport { Navigate } from 'react-router';\nimport CategoryDropDown from './CategoryDropDown';\n\nconst theme = createTheme();\nconst converter = new Showdown.Converter({\n    tables: true,\n    simplifiedAutoLink: true,\n    strikethrough: true,\n    tasklists: true\n});\n\nconst CreatePost = ({ token }) => {\n    const [body, setBody] = React.useState(\"**Hello world!!!**\");\n    const [title, setTitle] = React.useState(\"\");\n    const [selectedTab, setSelectedTab] = React.useState(\"write\");\n    const [error, setError] = React.useState(false);\n    const [postid, setPostid] = React.useState('');\n    const [redirect, setRedirect] = React.useState(false);\n    // state for category chooser\n    const [category, setCategory] = React.useState('');\n\n    const onSubmit = async () => {\n        if (title == '' || body == '' || category == '') {\n            setError('All fields must be filled!')\n            return;\n        };\n\n        const createPostResult = await fetch(`https://forum-backend.azurewebsites.net/createpost`, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                category,\n                postHeading: title,\n                postContent: body\n            })\n        })\n\n        const response = await createPostResult.json();\n        if (response.error != null) setError(response.error)\n        else {\n            setPostid(response.postid)\n            setRedirect(true)\n        }\n    }\n\n    if (redirect) return <Navigate to={`/post/${postid}`} />\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"md\" color=\"primary\">\n                <CssBaseline />\n                <Grid container\n                    alignItems=\"center\"\n                    justify=\"center\"\n                    direction=\"column\">\n                    <Grid item container alignItems=\"center\" justify=\"flex-end\" style={{\n                        width: 600,\n                        borderRadius: 10,\n                        margin: 5,\n                    }}>\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"title\"\n                            name=\"title\"\n                            value={title}\n                            onChange={(event) => {\n                                setTitle(event.target.value)\n                            }}\n                            autoComplete=\"title\"\n                            autoFocus\n                            style={{ width: '100%', marginTop: 5 }} placeholder=\"Title\" />\n                    </Grid>\n                    <Grid\n                        item container\n                        alignItems=\"center\"\n                        style={{\n                            width: 600,\n                            borderRadius: 10,\n                            margin: 5,\n                        }}>\n                        <Grid item style={{ width: '100%' }}>\n                            <ReactMde\n                                value={body}\n                                onChange={setBody}\n                                selectedTab={selectedTab}\n                                onTabChange={setSelectedTab}\n                                generateMarkdownPreview={markdown =>\n                                    Promise.resolve(converter.makeHtml(markdown))\n                                }\n                                childProps={{\n                                    writeButton: {\n                                        tabIndex: -1\n                                    }\n                                }}\n                            />\n                        </Grid>\n                        {(error != null) ? <ErrorMessage msg={error} /> : <div></div>}\n                        <Grid container>\n                            <Grid container style={{ width: '50%' }}>\n                                <CategoryDropDown\n                                    setError={setError}\n                                    category={category}\n                                    setCategory={setCategory}\n                                />\n                            </Grid>\n                            <Grid container spacing={1} justifyContent=\"flex-end\" style={{ width: '50%' }}>\n                                <Grid item>\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        onClick={onSubmit}\n                                        sx={{ mt: 3, mb: 2 }}\n                                    >\n                                        Post\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        type=\"submit\"\n                                        component={Link}\n                                        to=\"/\"\n                                        fullWidth\n                                        variant=\"contained\"\n                                        sx={{ mt: 3, mb: 2 }}\n                                    >\n                                        Discard\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Container>\n        </ThemeProvider >\n    );\n}\n\nexport default CreatePost;","import * as React from 'react'\n\nconst MyHorizonatalLine = () => {\n    return (\n        <div style={{ width: 540 }}>\n            <hr />\n        </div>\n    )\n}\n\nexport default MyHorizonatalLine;","import * as React from 'react'\n\nconst MyImageTag = ({ children, ...props }) => {\n    return (\n        <img {...props} style={{ width: 400 }} />\n    )\n}\n\nexport default MyImageTag;","import * as React from 'react';\nimport getTime from '../utils/time';\nimport { Grid, Button } from '@mui/material'\nimport ReactMarkdown from 'react-markdown'\nimport MyHorizonatalLine from './Markdown/HorizontalLine'\nimport MyImageTag from './Markdown/Image'\nimport ReportIcon from '@mui/icons-material/Report';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\n\nconst CommentsListView = ({ token, comments, setComments, setError, category, isloggedin = true, showButtons = false }) => {\n    const commentReport = async (commentid) => {\n        const reportResp = await fetch(`https://forum-backend.azurewebsites.net/report`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                reportedid: commentid,\n                category,\n                ispost: false\n            })\n        })\n\n        const report = await reportResp.json()\n        if (report.error != null) setError(report.error)\n    }\n\n    const deleteHandler = async (commentid) => {\n        const deleteResp = await fetch(`https://forum-backend.azurewebsites.net/removecomment`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                commentid\n            })\n        })\n\n        const resp = await deleteResp.json();\n        if (resp.error != null) setError(resp.error)\n        else {\n            console.log('Deleted Successfully!')\n        }\n\n        setComments(comments.filter((comment) => {\n            return comment.commentid != commentid;\n        }))\n    }\n\n    const unreportHandler = async (commentid) => {\n        const unreportResp = await fetch(`https://forum-backend.azurewebsites.net/unreport`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                reportedid: commentid,\n                ispost: false\n            })\n        })\n\n        const resp = await unreportResp.json();\n        if (resp.error != null) setError(resp.error)\n        else {\n            console.log('Unreported Successfully!')\n        }\n        \n        setComments(comments.filter((comment) => {\n            return comment.commentid != commentid;\n        }))\n    }\n\n    return (\n        <>\n            {\n                comments.map(({ username, content, createdAt, commentid }) => {\n                    return (\n                        <Grid\n                            key={commentid}\n                            item container\n                            alignItems=\"center\"\n                            style={{\n                                width: 600,\n                                borderRadius: 10,\n                                margin: 5,\n                                backgroundColor: '#D3D3D3'\n                            }}>\n                            <Grid container direction=\"column\">\n                                <Grid item container justify=\"flex-end\">\n                                    <Grid item style={{ marginTop: 5, marginLeft: 20 }}>\n                                        {`  posted by u/${username}  ${getTime(createdAt)}`}\n                                    </Grid>\n                                    {(isloggedin) ? (<Grid item justify=\"flex-start\" style={{ marginTop: 5, marginLeft: 5 }}>\n                                        <ReportIcon style={{ cursor: 'pointer' }} onClick={() => { commentReport(commentid) }} />\n                                    </Grid>) : <div></div>}\n                                </Grid>\n                            </Grid>\n                            <Grid align=\"left\" style={{ width: 600, marginLeft: 20, marginRight: 20 }}>\n                                <ReactMarkdown\n                                    children={content}\n                                    components={{\n                                        hr: MyHorizonatalLine,\n                                        img: MyImageTag\n                                    }} />\n                            </Grid>\n                            {\n                                (showButtons) ? (\n                                    <Grid container item style={{ marginLeft: 20, marginBottom: 5 }}>\n                                        <Button\n                                            startIcon={<DeleteIcon />}\n                                            style={{ color: '#FF0000' }}\n                                            onClick={async () => {\n                                                await deleteHandler(commentid);\n                                            }}\n                                        >\n                                            Delete\n                                        </Button>\n                                        <Button\n                                            startIcon={<RemoveCircleIcon />}\n                                            style={{ color: '#000000' }}\n                                            onClick={async () => {\n                                                await unreportHandler(commentid)\n                                            }}\n                                        >\n                                            Unreport\n                                        </Button>\n                                    </Grid>\n                                ) : (<div></div>)\n                            }\n                        </Grid>\n                    )\n                })\n            }\n        </>\n    )\n}\n\nexport default CommentsListView;","import React, { useEffect, useState } from 'react';\nimport { CssBaseline, Grid, Button } from '@mui/material'\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport CommentsListView from './CommentsListView'\nimport ErrorMessage from './Error';\nimport ReactMde from \"react-mde\";\nimport * as Showdown from \"showdown\";\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\nimport \"./style.css\";\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n            dark: '#D3D3D3',\n            main: '#A9A9A9'\n        }\n    }\n});\n\nconst CommentsList = ({ isloggedin, postid, token, category }) => {\n    const [error, setError] = useState('')\n    const [comments, setComments] = useState([])\n    const [body, setBody] = React.useState(\"**Hello world!!!**\");\n    const [selectedTab, setSelectedTab] = React.useState(\"write\");\n    const converter = new Showdown.Converter({\n        tables: true,\n        simplifiedAutoLink: true,\n        strikethrough: true,\n        tasklists: true\n    });\n\n    const fetchComments = async () => {\n        const commentsResults = await fetch(`https://forum-backend.azurewebsites.net/getcomments?postid=${postid}`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n\n        const content = await commentsResults.json()\n        if (content.error != null) setError(content.error)\n        else setComments(content)\n    }\n\n    const postComment = async () => {\n        const commResults = await fetch(`https://forum-backend.azurewebsites.net/createcomment`, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                ppostid: postid,\n                content: body\n            })\n        })\n\n        const response = await commResults.json();\n        if (response.error != null) setError(response.error);\n        else fetchComments();\n    }\n\n    // keeping the dependency list empty to make sure that the fetchComments is called everytime this component is rendered\n    useEffect(async () => {\n        await fetchComments()\n    }, [])\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"md\" color=\"primary\">\n                <CssBaseline />\n                {(error != '') ? <ErrorMessage msg={error} /> : <div></div>}\n                <Grid container\n                    align=\"center\"\n                    alignItems=\"center\"\n                    justify=\"center\"\n                    direction=\"column\"\n                >\n                    <Grid\n                        item container\n                        alignItems=\"center\"\n                        style={{\n                            width: 600,\n                            borderRadius: 10,\n                            margin: 5,\n                        }}>\n                        <Grid item style={{ width: '100%', minHeight: 50 }}>\n                            <ReactMde\n                                value={body}\n                                onChange={setBody}\n                                selectedTab={selectedTab}\n                                onTabChange={setSelectedTab}\n                                generateMarkdownPreview={markdown =>\n                                    Promise.resolve(converter.makeHtml(markdown))\n                                }\n                                childProps={{\n                                    writeButton: {\n                                        tabIndex: -1\n                                    }\n                                }}\n                            />\n                        </Grid>\n                        <Grid container justifyContent=\"flex-end\">\n                            <Grid item>\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    onClick={postComment}\n                                    sx={{ mt: 3, mb: 2 }}\n                                >\n                                    Post\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <CommentsListView\n                        token={token}\n                        comments={comments}\n                        setError={setError}\n                        category={category}\n                        isloggedin={isloggedin} />\n                </Grid>\n            </Container>\n        </ThemeProvider>\n    );\n}\n\nexport default CommentsList","import * as React from 'react';\nimport { CssBaseline, Grid, Typography } from '@mui/material'\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useParams } from 'react-router-dom'\nimport getTime from '../utils/time';\nimport ErrorMessage from './Error';\nimport ReactMarkdown from 'react-markdown'\nimport CommentsList from './CommentsList'\nimport MyHorizonatalLine from './Markdown/HorizontalLine'\nimport MyImageTag from './Markdown/Image'\nimport ReportIcon from '@mui/icons-material/Report';\n\nconst theme = createTheme();\n\nconst ShowPost = ({ token, isloggedin }) => {\n    const { postid } = useParams()\n    const [post, setPost] = React.useState({})\n    const [error, setError] = React.useState('')\n\n    const fetchPost = async () => {\n        const postResults = await fetch(`https://forum-backend.azurewebsites.net/post/?postid=${postid}`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n\n        const content = await postResults.json()\n        // Check for status 404 \n        if (content.error != null) setError(content.error)\n        else {\n            setPost(content)\n        }\n    }\n\n    const postReport = async () => {\n        const reportResp = await fetch(`https://forum-backend.azurewebsites.net/report`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }, \n            body: JSON.stringify({\n                reportedid: postid,\n                category: post.category,\n                ispost: true\n            })\n        })\n\n        const report = await reportResp.json()\n        if(report.error != null) setError(report.error)\n    }\n\n    React.useEffect(async () => {\n        await fetchPost();\n    }, [])\n\n    if (error) return <ErrorMessage msg={error} />\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"md\" color=\"primary\">\n                <CssBaseline />\n                <Grid container\n                    align=\"center\"\n                    alignItems=\"center\"\n                    direction=\"column\">\n                    <Grid\n                        item container\n                        alignItems=\"center\"\n                        style={{\n                            width: 600,\n                            borderRadius: 10,\n                            margin: 5,\n                            backgroundColor: '#D3D3D3',\n                        }}>\n                        <Grid container direction=\"column\">\n                            <Grid item container justify=\"flex-end\">\n                                <Grid item style={{ marginTop: 5, marginLeft: 20 }}> <b>{`c/${post.category}`}</b> </Grid>\n                                <Grid item style={{ marginTop: 5, marginLeft: 5 }}> {`  posted by u/${post.username}  ${getTime(post.createdAt)}`} </Grid>\n                                <Grid item justify=\"flex-start\" style={{ marginTop: 5, marginLeft: 5 }}>\n                                    <ReportIcon style={{ cursor: 'pointer' }} onClick={postReport} />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item container alignItems=\"center\" align=\"left\" style={{ width: 600, marginLeft: 20, marginRight: 20 }}>\n                            <Typography variant=\"h6\">{post.postHeading}</Typography>\n                        </Grid>\n                        <Grid align=\"left\" style={{ width: 600, marginLeft: 20, marginRight: 20 }}>\n                            <ReactMarkdown\n                                children={post.postContent}\n                                components={{\n                                    hr: MyHorizonatalLine,\n                                    img: MyImageTag\n                                }} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <CommentsList \n                    category={post.category}\n                    postid={postid} \n                    token={token} \n                />\n            </Container>\n        </ThemeProvider>\n    );\n}\n\nexport default ShowPost","import * as React from 'react'\nimport { CssBaseline, Grid, Typography } from '@mui/material'\nimport Container from '@mui/material/Container';\nimport ErrorMessage from './Error';\nimport PostsListsView from './PostsListView';\nimport CommentsListView from './CommentsListView';\n\nconst Modcontrol = ({ token }) => {\n    const [error, setError] = React.useState('')\n    const [reported, setReported] = React.useState({ posts: [], comments: [] })\n\n    const fetchReported = async () => {\n        const reportedResponse = await fetch(`https://forum-backend.azurewebsites.net/reported`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        })\n\n        const reported = await reportedResponse.json()\n        if (reported.error != null) setError(reported.error)\n        else {\n            setReported(reported)\n        }\n    }\n\n    const setPosts = (posts) => {\n        setReported({\n            posts,\n            comments: reported.comments\n        })\n    }\n\n    const setComments = (comments) => {\n        setReported({\n            posts: reported.posts,\n            comments\n        })\n    }\n\n    React.useEffect(fetchReported, [])\n\n    return (\n        <Container component=\"main\" maxWidth=\"md\" color=\"primary\">\n            <CssBaseline />\n            {(error != '') ? (<ErrorMessage msg={error} />) : (<div></div>)}\n            <Grid container\n                align=\"center\"\n                alignItems=\"center\"\n                justify=\"center\"\n                direction=\"column\"\n            >\n                <Typography variant=\"h5\"> Reported Posts </Typography>\n                <PostsListsView\n                    token={token}\n                    posts={reported.posts}\n                    setPosts={setPosts}\n                    setError={setError}\n                    isloggedin={false}\n                    showButtons={true}\n                />\n                <Typography variant=\"h5\"> Reported Comments </Typography>\n                <CommentsListView\n                    token={token}\n                    comments={reported.comments}\n                    setComments={setComments}\n                    setError={setError}\n                    isloggedin={false}\n                    showButtons={true}\n                />\n            </Grid>\n        </Container>\n    );\n}\n\nexport default Modcontrol;","import * as React from 'react';\nimport { Grid, Container, Typography, Button } from '@mui/material'\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport ErrorMessage from './Error'\nimport CategoryDropDown from './CategoryDropDown'\n\nconst EditCategory = ({ token }) => {\n    const [error, setError] = React.useState('')\n    const [anchorEl, setAnchorEl] = React.useState(null)\n    const [category, setCategory] = React.useState('')\n\n    const AddCategoryHandler = async () => {\n        if (category == '') {\n            setError(\"Name the Category!\")\n            return\n        }\n\n        const addcatresp = await fetch(`https://forum-backend.azurewebsites.net/createcat`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                name: category\n            })\n        })\n\n        const resp = await addcatresp.json()\n        if (resp.error != null) setError(resp.error)\n        else setError('')\n    }\n\n    const RemoveCategoryHandler = async () => {\n        if (category == '') {\n            setError(\"Name the Category!\")\n            return\n        }\n\n        const removecatResp = await fetch(`https://forum-backend.azurewebsites.net/removecat`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                name: category\n            })\n        })\n\n        const resp = await removecatResp.json()\n        if (resp.error != null) setError(resp.error)\n        else setError('')\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Grid container\n                align=\"center\"\n                alignItems=\"center\"\n                justify=\"center\"\n                direction=\"column\"\n            >\n                <ErrorMessage\n                    msg={error}\n                />\n                <Typography variant=\"h5\">\n                    Add/Remove Category\n                </Typography>\n                <CategoryDropDown\n                    anchorEl={anchorEl}\n                    setAnchorEl={setAnchorEl}\n                    setError={setError}\n                    category={category}\n                    setCategory={setCategory}\n                />\n            </Grid>\n            <Grid container justifyContent=\"center\">\n                <Button\n                    startIcon={<AddIcon />}\n                    style={{ color: '#FF0000' }}\n                    onClick={AddCategoryHandler}\n                >\n                    Add\n                </Button>\n                <Button\n                    startIcon={<RemoveIcon />}\n                    style={{ color: '#000000' }}\n                    onClick={RemoveCategoryHandler}\n                >\n                    Remove\n                </Button>\n            </Grid>\n        </Container>\n    )\n}\n\nexport default EditCategory;","import * as React from 'react';\nimport { Button, Grid, TextField, Menu, MenuItem } from '@mui/material'\n\nconst UsernameDropDown = ({ setError, username, setUsername }) => {\n    const [keyword, setKeyword] = React.useState('');\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [users, setUsers] = React.useState([]);\n\n    const openMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    }\n\n    const onClick = (event) => {\n        setUsername(event.target.id);\n        setAnchorEl(null);\n    }\n\n    const getUsers = async () => {\n        const usersResults = await fetch(`https://forum-backend.azurewebsites.net/getusers?keyword=${keyword}`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n\n        const userResp = await usersResults.json();\n\n        if (userResp.error != null) setError(userResp.error)\n        else setUsers(userResp);\n    }\n\n    React.useEffect(async () => {\n        await getUsers();\n    }, [keyword])\n\n    const handleChange = (event) => {\n        setKeyword(event.target.value);\n    }\n\n    return (\n        <Grid container spacing={1} justifyContent=\"center\" style={{ width: '50%' }}>\n            <Button\n                type=\"submit\"\n                variant=\"contained\"\n                onClick={openMenu}\n                sx={{ mt: 3, mb: 2, marginLeft: 1 }}\n            >\n                {(username == '') ? \"username\" : `u/${username}`}\n            </Button>\n            <Menu\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={onClick}\n            >\n                <TextField value={keyword} onChange={handleChange} label=\"Username\" style={{ margin: 1 }}></TextField>\n                {\n                    users.map(({ username, userid }) => {\n                        return (\n                            <MenuItem key={userid} id={username} onClick={onClick}> {`c/${username}`} </MenuItem>\n                        )\n                    })\n                }\n            </Menu>\n        </Grid>\n    );\n}\n\nexport default UsernameDropDown;","import * as React from 'react';\nimport { Grid, Container, Typography, Button } from '@mui/material'\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport ErrorMessage from './Error'\nimport CategoryDropDown from './CategoryDropDown'\nimport UsernameDropDown from './UsernameDropDown'\n\nconst EditModerator = ({ token }) => {\n    const [error, setError] = React.useState('')\n    // for edit category\n    const [category, setCategory] = React.useState('')\n    // for edit moderator\n    const [username, setUsername] = React.useState('')\n    const [cat, setCat] = React.useState('')\n\n    const AddModeratorHandler = async () => {\n        if (username == '' || cat == '') {\n            setError(\"Fill all details!\")\n            return\n        }\n\n        const addmodresp = await fetch(`https://forum-backend.azurewebsites.net/createmod`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                username,\n                category: cat\n            })\n        })\n\n        const resp = await addmodresp.json()\n        if (resp.error != null) setError(resp.error)\n        else setError('')\n    }\n\n    const RemoveModeratorHandler = async () => {\n        if (username == '' || cat == '') {\n            setError(\"Fill all details!\")\n            return\n        }\n\n        const removemodresp = await fetch(`https://forum-backend.azurewebsites.net/removemod`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                username,\n                category: cat\n            })\n        })\n\n        const resp = await removemodresp.json()\n        if (resp.error != null) setError(resp.error)\n        else setError('')\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Grid container\n                align=\"center\"\n                alignItems=\"center\"\n                justify=\"center\"\n                direction=\"column\"\n            >\n                <ErrorMessage\n                    msg={error}\n                />\n                <Typography variant=\"h5\">\n                    Add/Remove Moderator\n                </Typography>\n                <UsernameDropDown\n                    setError={setError}\n                    username={username}\n                    setUsername={setUsername}\n                />\n                <CategoryDropDown\n                    setError={setError}\n                    category={cat}\n                    setCategory={setCat}\n                />\n            </Grid>\n            <Grid container justifyContent=\"center\">\n                <Button\n                    startIcon={<AddIcon />}\n                    style={{ color: '#FF0000' }}\n                    onClick={AddModeratorHandler}\n                >\n                    Add\n                </Button>\n                <Button\n                    startIcon={<RemoveIcon />}\n                    style={{ color: '#000000' }}\n                    onClick={RemoveModeratorHandler}\n                >\n                    Remove\n                </Button>\n            </Grid>\n        </Container>\n    )\n}\n\nexport default EditModerator;","import * as React from 'react';\nimport { Grid, CssBaseline } from '@mui/material'\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport EditCategory from './EditCategory'\nimport EditModerator from './EditModerator'\n\nconst theme = createTheme();\n\nconst Admincontrol = ({ token }) => {\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Grid container style={{ width: '100%' }} justifyContent=\"center\">\n                <CssBaseline />\n                <Grid container style={{ width: '60%', marginTop: 20 }} justifyContent=\"center\">\n                    <EditCategory token={token} />\n                    <EditModerator token={token} />\n                </Grid>\n            </Grid>\n        </ThemeProvider>\n    );\n}\n\nexport default Admincontrol;","import React, { useState } from 'react'\nimport SignIn from './components/SignIn'\nimport SignUp from './components/SignUp'\nimport PostsList from './components/PostsList'\nimport Navbar from './components/Navbar'\nimport About from './components/About'\nimport CreatePost from './components/CreatePost'\nimport ShowPost from './components/ShowPost'\nimport Modcontrol from './components/Modcontrol'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\nimport Admincontrol from './components/Admincontrol'\n\nfunction App() {\n    const [username, setUsername] = useState('');\n    const [points, setPoints] = useState(null);\n    const [token, setToken] = useState('')\n    const [isloggedin, setIsloggedin] = useState(false);\n    // states that stores the previleges of the user\n    const [ismod, setIsmod] = useState(false);\n    const [isadmin, setIsadmin] = useState(false);\n\n    return (\n        <BrowserRouter>\n            <Navbar\n                isloggedin={isloggedin}\n                username={username}\n                points={points}\n                ismod={ismod}\n                isadmin={isadmin}\n            />\n            <div>\n                <Routes>\n                    <Route path='/' exact element={<PostsList isloggedin={isloggedin} />} />\n                    <Route path='/login' exact element={\n                        <SignIn\n                            setIsloggedin={setIsloggedin}\n                            setUsername={setUsername}\n                            setPoints={setPoints}\n                            setToken={setToken}\n                            setIsmod={setIsmod}\n                            setIsadmin={setIsadmin}\n                        />}\n                    />\n                    <Route path='/register' exact element={<SignUp />} />\n                    {\n                        isloggedin\n                            ? <Route path='/createPost' element={\n                                <CreatePost\n                                    token={token}\n                                />}\n                            />\n                            : <Route />\n                    }\n                    <Route path='/post/:postid' element={<ShowPost isloggedin={isloggedin} token={token} />} />\n                    <Route path='/about/:username' element={<About username={username} />} />\n                    {\n                        (isloggedin && (ismod || isadmin)) ? (<Route path='/modcontrol' element={\n                            <Modcontrol\n                                token={token}\n                            />}\n                        />) : <Route />\n                    }\n                    {\n                        (isloggedin && isadmin) ? (<Route path='/admincontrol' element={\n                            <Admincontrol\n                                token={token}\n                            />}\n                        />) : <Route />\n                    }\n                </Routes>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.jsx'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}